AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'AWS_Cost_Notifier

  Sample SAM Template for AWS_Cost_Notifier

  '
Globals:
  Function:
    Timeout: 3
Parameters:
  LineNotifyToken:
    Type: String
    Default: hoge
Resources:
  BillingIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: AWSCostNotifierLambdaPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - ce:GetCostAndUsage
            Resource: '*'
    Metadata:
      SamResourceId: BillingIamRole
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://2bo-lambda-bucket/852a49af88139ac82b349bf358e839c4
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Environment:
        Variables:
          LINE_NOTIFY_TOKEN:
            Ref: LineNotifyToken
      Role:
        Fn::GetAtt:
        - BillingIamRole
        - Arn
      Events:
        NotifyLINE:
          Type: Schedule
          Properties:
            Schedule: cron(30 0 * * ? *)
    Metadata:
      SamResourceId: HelloWorldFunction
Outputs:
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
      - HelloWorldFunction
      - Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - BillingIamRole
      - Arn
